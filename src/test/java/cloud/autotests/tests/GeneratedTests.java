package cloud.autotests.tests;

import cloud.autotests.helpers.DriverUtils;
import io.qameta.allure.Description;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;
import org.openqa.selenium.By;

import static com.codeborne.selenide.Condition.text;
import static com.codeborne.selenide.Selenide.*;
import static io.qameta.allure.Allure.step;
import static org.assertj.core.api.Assertions.assertThat;


public class GeneratedTests extends TestBase {
    @Test
    @Description("Soon to be implemented by you (or QA.GURU engineers)")
    @DisplayName("личный кабинет")
    void registrationTest() {
       step("", () -> open("https://doramalive.ru/"));
       step("войти в личный кабинет", () -> {
          $(By.xpath("//*[@id=\"user_panel\"]/li[2]/a")).click();
          $(".form-control.login").setValue("");
          $("#passwordShow").setValue("");
          $(".btn.btn-danger.btn-block").click();

        });
}
    @Test
    @Description("Soon to be implemented by you (or QA.GURU engineers)")
    @DisplayName("меню сайта")
    void menuTest() {
        step("// меню сайта", () -> {
            open("https://doramalive.ru/");
            $(".dropdown-toggle").click();
            $$(".root-item").findBy(text("форум")).click();
            $$(".root-item").findBy(text("справка")).click();
            $$(".root-item").findBy(text("помочь сайту")).click();
            $(".fa.fa-child").click();
        });
    }


    @Test
    @Description("Soon to be implemented by you (or QA.GURU engineers)")
    @DisplayName("поиск фильма")
    void generatedTest() {
        step("// открыть сайт", () -> {
            open("https://doramalive.ru/");
            $(By.xpath("//*[@id=\"user_panel\"]/li[2]/a")).click();
            $(".form-control.login").setValue("");
            $("#passwordShow").setValue("");
            $(".btn.btn-danger.btn-block").click();
        });

        step("поиск и добавления фильма в отложеные", () -> {
            $("#title-search").click();
            $("#searchLive").setValue("мы все мертвы").pressEnter();
            $("#bookmark-533616").click();
            $$("#modal-bmark").findBy(text("отложено")).click();
        });

    }

    @Test
    @Description("Autogenerated test")
    @DisplayName("заголовок страницы должен содержать текст заголовка")
    void titleTest() {
        step("Open url 'https://doramalive.ru/'", () ->
            open("https://doramalive.ru/"));

        step("заголовок страницы должен содержать текст заголовка 'Дорамы смотреть онлайн на Dorama live'", () -> {
            String expectedTitle = "Дорамы смотреть онлайн на Dorama live";
            String actualTitle = title();

            assertThat(actualTitle).isEqualTo(expectedTitle);
        });
    }

    @Test
    @Description("Autogenerated test")
    @DisplayName("журнал консоли страницы не должен содержать ошибок")
    void consoleShouldNotHaveErrorsTest() {
        step("Open url 'https://doramalive.ru/'", () ->
            open("https://doramalive.ru/"));

        step("Console logs should not contain text 'SEVERE'", () -> {
            String consoleLogs = DriverUtils.getConsoleLogs();
            String errorText = "SEVERE";

            assertThat(consoleLogs).doesNotContain(errorText);
        });
    }
}